{"ast":null,"code":"var _jsxFileName = \"/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { ethers } from 'ethers';\nimport { create } from 'ipfs-http-client';\nimport React, { useState, useRef, useEffect, useContext } from 'react'; // new\n\nimport { KaikasWeb3Provider } from \"@klaytn/kaikas-web3-provider\";\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { AccountContext } from './context';\nimport { databaseAddress, ownerAddress } from './config';\nimport heralogo from './img/logo-hera.png';\nimport metamasklogo from './img/logo-metamask.png';\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json';\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json';\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport RecordComponent from './RecordComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'; //IPFS endpoint\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst projectId = '2DBkdZ0RLVleEQgaqcR5VNoaO4d';\nconst projectSecret = 'aebbd2d6d63d774c249c32d27c2bb4c4';\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nconst client = ipfsClient.create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  apiPath: '/api/v0',\n  headers: {\n    authorization: auth\n  }\n}); //Initial Empty State of Medical Record\n\nconst initialState = {\n  description: '',\n  recordType: '',\n  recordDate: ''\n};\nexport class Record {\n  constructor(num, id, type, date, image_hash, data_hash) {\n    this.num = num;\n    this.id = id;\n    this.type = type;\n    this.date = date;\n    this.image_hash = image_hash;\n    this.data_hash = data_hash;\n  }\n\n}\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    Component,\n    pageProps\n  } = _ref;\n  const [account, setAccount] = useState(null);\n  const [file, setFile] = useState(null);\n  const [record, setRecord] = useState(initialState);\n  const {\n    description,\n    recordType,\n    recordDate\n  } = record;\n  const [ownedRecords, setOwnedRecords] = useState([]);\n  const [provider, setProvider] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n\n  function onChange(e) {\n    setRecord(() => ({ ...record,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      /* delay rendering buttons until dynamic import is complete */\n      setLoaded(true);\n    }, 500);\n  }, []);\n\n  async function getWeb3Modal() {\n    const web3Modal = new Web3Modal({\n      cacheProvider: false,\n      network: \"boabab\",\n      networkId: 1001,\n      chain: \"Klaytn\",\n      chainId: 1001,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: \"your-infura-id\"\n          },\n          kaikas: {\n            package: KaikasWeb3Provider\n          }\n        }\n      }\n    });\n    console.log(web3Modal);\n    return web3Modal;\n  }\n\n  async function checkForBoabab() {\n    const provider = window.ethereum;\n\n    if (!provider) {\n      console.log(\"Metamask is not installed, please install!\");\n      return;\n    }\n\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: '0x3E9'\n        }]\n      });\n      console.log(\"You have succefully switched to Boabab Test network\");\n      return;\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        console.log(\"This network is not available in your metamask, please add it\");\n      }\n\n      console.log(\"Failed to switch to the network\");\n    }\n\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [{\n          chainId: '0x3E9',\n          chainName: 'boabab',\n          rpcUrls: [BAOBAB_TESTNET_RPC_URL],\n          nativeCurrency: {\n            symbol: 'KLAY',\n            decimals: 18\n          }\n        }]\n      });\n    } catch (addError) {\n      console.log(addError);\n    }\n  }\n  /* the connect function uses web3 modal to connect to the user's wallet */\n\n\n  async function connect() {\n    try {\n      await checkForBoabab();\n      const web3Modal = await getWeb3Modal();\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n      setProvider(provider);\n      const accounts = await provider.listAccounts();\n      setAccount(accounts[0]);\n      console.log(provider);\n      getOwnedRecords();\n    } catch (err) {\n      console.log('error:', err);\n    }\n  }\n\n  async function saveImageToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(file);\n      return added.path;\n    } catch (err) {\n      console.log('Could not upload image: ', err);\n    }\n  }\n\n  async function saveDataToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(JSON.stringify(record.description));\n      return added.path;\n    } catch (err) {\n      console.log('Could not upload Data: ', err);\n    }\n  }\n\n  const convertToUnix = date => {\n    const dateFormat = new Date(date);\n    let unixTimestamp = Math.floor(dateFormat.getTime() / 1000); // console.log(unixTimestamp)\n\n    return unixTimestamp;\n  };\n\n  async function createNewRecord(e) {\n    /* saves post to ipfs then anchors to smart contract */\n    if (file == null) {\n      alert(\"Please upload a Medical Record Image to add to HeraChain\");\n      return;\n    }\n\n    if (!recordType) {\n      alert(\"Please select a valid Record Type.\");\n      return;\n    }\n\n    if (!recordDate) {\n      alert(\"Please provide a valid Record Date\");\n      return;\n    }\n\n    const unix = convertToUnix(recordDate);\n\n    if (isNaN(unix)) {\n      alert(\"Please provide a valid Record Date\");\n      return;\n    }\n\n    const image_hash = await saveImageToIpfs();\n    console.log(\"Image has been saved to \" + image_hash);\n    const data_hash = await saveDataToIpfs();\n    console.log(\"Data has been saved to \" + data_hash);\n    var success = await createEMR(image_hash, data_hash);\n\n    if (!success) {\n      alert(\"Unable to create an EMR on the blockchain. Please check that you have connected your wallet.\");\n      return;\n    }\n\n    alert(\"Medical Record Successfully Added to HeraChain\");\n    setRecord(() => ({\n      description: '',\n      recordType: '',\n      recordDate: ''\n    }));\n    document.getElementById(\"form\").reset();\n    setFile(null);\n  }\n\n  async function createEMR(image_hash, data_hash) {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(signer);\n      const contract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer);\n      console.log('contract: ', contract);\n\n      try {\n        const unixdate = convertToUnix(record.recordDate);\n        console.log(\"Record Date: \" + unixdate);\n        const val = await contract.createEMR(record.recordType, \"Active\", unixdate, image_hash, data_hash);\n        /* optional - wait for transaction to be confirmed before rerouting */\n\n        /* await provider.waitForTransaction(val.hash) */\n\n        console.log('val: ', val);\n        return true;\n      } catch (err) {\n        console.log('Error: ', err);\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  function onFormChange(e) {\n    setRecord(() => ({ ...record,\n      [e.target.name]: e.target.value\n    }));\n    console.log(record);\n  }\n\n  async function getOwnedRecords() {\n    console.log(\"Getting owned EMRs\");\n    setOwnedRecords([]);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer);\n    let emrStorageAddress = await databaseContract.getEMRStorageContract();\n    console.log(\"Storage: \" + emrStorageAddress);\n    const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n    let ownedRecs = await storageContract.getEMRIDs();\n\n    for (let j = 0; j < ownedRecs.length; j++) {\n      var rec = await storageContract.getEMR(ownedRecs[j]);\n      let emr = {\n        num: j + 1,\n        id: ownedRecs[j],\n        type: rec.record_type,\n        date: rec.record_date,\n        image_hash: rec.ipfs_image_hash,\n        data_hash: rec.ipfs_data_hash\n      };\n      setOwnedRecords(ownedRecords => [...ownedRecords, emr]);\n    }\n\n    console.log(ownedRecords);\n  }\n\n  const afterSubmission = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    async function fetchEMRs() {\n      await getOwnedRecords();\n    }\n  }, []);\n\n  async function removeRecord(id) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer);\n    let emrStorageAddress = await databaseContract.getEMRStorageContract();\n    const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n    await storageContract.voidEMR(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo mt-40\",\n          src: heralogo,\n          alt: \"hera logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 82\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hera-purple\",\n          children: \"Hera Digital Documentation System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"mt-20 mr-20\",\n          src: metamasklogo,\n          alt: \"metamask logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"metamask-btn mt-20\",\n          onClick: connect,\n          children: \"Connect Metamask Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"address-display\",\n          children: [\"Account: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-20 col-md-6 col-sm-12 margin-zero\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"form-label hera-purple\",\n          children: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form\",\n          onSubmit: afterSubmission,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control mt-20\",\n            type: \"file\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            className: \"form-control\",\n            rows: \"3\",\n            onChange: onFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Record Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"recordType\",\n            onChange: onFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"Record Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Personal ID\",\n              children: \"Personal ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Health Report\",\n              children: \"Health Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Vaccination Report\",\n              children: \"Vaccination Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Record Date (MM/DD/YYYY)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"recordDate\",\n            type: \"text\",\n            onChange: onFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mt-20\",\n            onClick: createNewRecord,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-40 col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hera-purple\",\n          children: \"Saved Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Record Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Record Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Uploaded File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ownedRecords.map(function (record, i) {\n              return /*#__PURE__*/_createElement(RecordComponent, { ...record,\n                record: record,\n                key: i,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 36\n                }\n              });\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mt-40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 223\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Zr6ZRrcMfmS5AP2co/sA1wNU5vY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Accordion","Card","Button","ethers","create","React","useState","useRef","useEffect","useContext","KaikasWeb3Provider","Web3Modal","WalletConnectProvider","AccountContext","databaseAddress","ownerAddress","heralogo","metamasklogo","EMRContractDatabase","EMRStorageContract","Interface","SignerWithAddress","toHaveStyle","RecordComponent","BAOBAB_TESTNET_RPC_URL","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","client","host","port","protocol","apiPath","headers","authorization","initialState","description","recordType","recordDate","Record","constructor","num","id","type","date","image_hash","data_hash","App","Component","pageProps","account","setAccount","file","setFile","record","setRecord","ownedRecords","setOwnedRecords","provider","setProvider","loaded","setLoaded","onChange","e","target","name","value","setTimeout","getWeb3Modal","web3Modal","cacheProvider","network","networkId","chain","chainId","providerOptions","walletconnect","package","options","infuraId","kaikas","console","log","checkForBoabab","window","ethereum","request","method","params","switchError","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","addError","connect","connection","providers","Web3Provider","accounts","listAccounts","getOwnedRecords","err","saveImageToIpfs","added","add","path","saveDataToIpfs","JSON","stringify","convertToUnix","dateFormat","Date","unixTimestamp","Math","floor","getTime","createNewRecord","alert","unix","isNaN","success","createEMR","document","getElementById","reset","signer","getSigner","contract","Contract","abi","unixdate","val","onFormChange","databaseContract","emrStorageAddress","getEMRStorageContract","storageContract","ownedRecs","getEMRIDs","j","length","rec","getEMR","emr","record_type","record_date","ipfs_image_hash","ipfs_data_hash","afterSubmission","event","preventDefault","fetchEMRs","removeRecord","voidEMR","files","map","i"],"sources":["/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { ethers } from 'ethers'\nimport { create } from 'ipfs-http-client'\nimport React, { useState, useRef, useEffect, useContext } from 'react' // new\nimport { KaikasWeb3Provider } from \"@klaytn/kaikas-web3-provider\"\n\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { AccountContext } from './context';\nimport { databaseAddress, ownerAddress } from './config'\nimport heralogo from './img/logo-hera.png'\nimport metamasklogo from './img/logo-metamask.png'\n\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json'\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json'\n\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport RecordComponent from './RecordComponent';\n\n\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'\n\n//IPFS endpoint\nconst ipfsClient = require('ipfs-http-client')\nconst projectId = '2DBkdZ0RLVleEQgaqcR5VNoaO4d'\nconst projectSecret = 'aebbd2d6d63d774c249c32d27c2bb4c4'\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nconst client = ipfsClient.create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    apiPath: '/api/v0',\n    headers: {\n        authorization: auth,\n    },\n});\n\n//Initial Empty State of Medical Record\nconst initialState = { description: '', recordType: '', recordDate: '' }\n\nexport class Record {\n    constructor(num, id, type, date, image_hash, data_hash) {\n        this.num = num;\n        this.id = id;\n        this.type = type;\n        this.date = date;\n        this.image_hash = image_hash;\n        this.data_hash = data_hash;\n    }\n}\n\nfunction App({ Component, pageProps }) {\n    const [account, setAccount] = useState(null)\n    const [file, setFile] = useState(null)\n    const [record, setRecord] = useState(initialState)\n    const { description, recordType, recordDate } = record\n    const [ownedRecords, setOwnedRecords] = useState([])\n    const [provider, setProvider] = useState(null)\n    const [loaded, setLoaded] = useState(false)\n\n\n    function onChange(e) {\n        setRecord(() => ({ ...record, [e.target.name]: e.target.value }))\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            /* delay rendering buttons until dynamic import is complete */\n            setLoaded(true)\n        }, 500)\n    }, [])\n\n    async function getWeb3Modal() {\n        const web3Modal = new Web3Modal({\n            cacheProvider: false,\n            network: \"boabab\",\n            networkId: 1001,\n            chain: \"Klaytn\",\n            chainId: 1001,\n            providerOptions: {\n                walletconnect: {\n                    package: WalletConnectProvider,\n                    options: {\n                        infuraId: \"your-infura-id\"\n                    },\n                    kaikas: {\n                        package: KaikasWeb3Provider,\n                    }\n                },\n            },\n        })\n        console.log(web3Modal)\n\n        return web3Modal\n    }\n\n    async function checkForBoabab() {\n        const provider = window.ethereum;\n        if (!provider) {\n            console.log(\"Metamask is not installed, please install!\");\n            return\n        }\n        try {\n            await provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: '0x3E9' }],\n            });\n            console.log(\"You have succefully switched to Boabab Test network\")\n            return\n        } catch (switchError) {\n            // This error code indicates that the chain has not been added to MetaMask.\n            if (switchError.code === 4902) {\n                console.log(\"This network is not available in your metamask, please add it\")\n            }\n            console.log(\"Failed to switch to the network\")\n        }\n        try {\n            await provider.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    {\n                        chainId: '0x3E9',\n                        chainName: 'boabab',\n                        rpcUrls: [BAOBAB_TESTNET_RPC_URL],\n                        nativeCurrency: { symbol: 'KLAY', decimals: 18 }\n                    }]\n            });\n        }\n        catch (addError) {\n            console.log(addError);\n        }\n    }\n\n    /* the connect function uses web3 modal to connect to the user's wallet */\n    async function connect() {\n        try {\n            await checkForBoabab()\n            const web3Modal = await getWeb3Modal()\n            const connection = await web3Modal.connect()\n            const provider = new ethers.providers.Web3Provider(connection)\n            setProvider(provider)\n            const accounts = await provider.listAccounts()\n            setAccount(accounts[0])\n            console.log(provider)\n            getOwnedRecords()\n        } catch (err) {\n            console.log('error:', err)\n        }\n    }\n\n    async function saveImageToIpfs() {\n        /* save post metadata to ipfs */\n        try {\n            const added = await client.add(file)\n            return added.path\n        } catch (err) {\n            console.log('Could not upload image: ', err)\n        }\n    }\n\n    async function saveDataToIpfs() {\n        /* save post metadata to ipfs */\n        try {\n            const added = await client.add(JSON.stringify(record.description))\n            return added.path\n        } catch (err) {\n            console.log('Could not upload Data: ', err)\n        }\n    }\n\n    const convertToUnix = (date) => {\n        const dateFormat = new Date(date);\n        let unixTimestamp = Math.floor(dateFormat.getTime() / 1000)\n        // console.log(unixTimestamp)\n        return unixTimestamp\n    }\n\n\n    async function createNewRecord(e) {\n        /* saves post to ipfs then anchors to smart contract */\n        if (file == null) {\n            alert(\"Please upload a Medical Record Image to add to HeraChain\")\n            return\n        }\n        if (!recordType) {\n            alert(\"Please select a valid Record Type.\")\n            return\n        }\n        if (!recordDate) {\n            alert(\"Please provide a valid Record Date\")\n            return\n        }\n        const unix = convertToUnix(recordDate)\n\n        if (isNaN(unix)) {\n            alert(\"Please provide a valid Record Date\")\n            return\n        }\n\n        const image_hash = await saveImageToIpfs()\n        console.log(\"Image has been saved to \" + image_hash)\n        const data_hash = await saveDataToIpfs()\n        console.log(\"Data has been saved to \" + data_hash)\n        var success = await createEMR(image_hash, data_hash)\n        if (!success) {\n            alert(\"Unable to create an EMR on the blockchain. Please check that you have connected your wallet.\")\n            return\n        }\n        alert(\"Medical Record Successfully Added to HeraChain\")\n        setRecord(() => ({ description: '', recordType: '', recordDate: '' }))\n        document.getElementById(\"form\").reset();\n        setFile(null)\n    }\n\n\n\n    async function createEMR(image_hash, data_hash) {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            console.log(signer)\n            const contract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n            console.log('contract: ', contract)\n            try {\n                const unixdate = convertToUnix(record.recordDate)\n                console.log(\"Record Date: \" + unixdate)\n                const val = await contract.createEMR(record.recordType, \"Active\", unixdate, image_hash, data_hash)\n                /* optional - wait for transaction to be confirmed before rerouting */\n                /* await provider.waitForTransaction(val.hash) */\n                console.log('val: ', val)\n                return true;\n            } catch (err) {\n                console.log('Error: ', err)\n                return false;\n            }\n        }\n        return false;\n\n    }\n\n    function onFormChange(e) {\n        setRecord(() => ({ ...record, [e.target.name]: e.target.value }))\n        console.log(record)\n    }\n\n    async function getOwnedRecords() {\n        console.log(\"Getting owned EMRs\")\n        setOwnedRecords([])\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const signer = provider.getSigner()\n        const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n        let emrStorageAddress = await databaseContract.getEMRStorageContract()\n        console.log(\"Storage: \" + emrStorageAddress)\n        const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n        let ownedRecs = await storageContract.getEMRIDs()\n        for (let j = 0; j < ownedRecs.length; j++) {\n            var rec = await storageContract.getEMR(ownedRecs[j])\n            let emr: Record = {\n                num: j + 1,\n                id: ownedRecs[j],\n                type: rec.record_type,\n                date: rec.record_date,\n                image_hash: rec.ipfs_image_hash,\n                data_hash: rec.ipfs_data_hash\n            }\n            setOwnedRecords(ownedRecords => [...ownedRecords, emr]);\n        }\n        console.log(ownedRecords)\n    }\n\n    const afterSubmission = (event) => {\n        event.preventDefault();\n    }\n\n    useEffect(() => {\n        async function fetchEMRs() {\n            await getOwnedRecords()\n        }\n    }, [])\n\n    async function removeRecord(id) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const signer = provider.getSigner()\n        const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n        let emrStorageAddress = await databaseContract.getEMRStorageContract()\n        const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n        await storageContract.voidEMR(id)\n    }\n\n    return (\n        <><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\" /><div className=\"container\">\n            <center><img className=\"logo mt-40\" src={heralogo} alt=\"hera logo\" /><br />\n                <h2 className=\"hera-purple\">Hera Digital Documentation System</h2>\n            </center>\n            <center><img className=\"mt-20 mr-20\" src={metamasklogo} alt=\"metamask logo\" /><button className=\"metamask-btn mt-20\" onClick={connect}>Connect Metamask Wallet</button></center>\n            <center><h6 className=\"address-display\">Account: {account}</h6></center>\n\n            <div className=\"mt-20 col-md-6 col-sm-12 margin-zero\">\n\n                <h4 className=\"form-label hera-purple\">Upload a file</h4>\n\n                {/* <FileForm onSubmit={createEMR} /> */}\n                <form id=\"form\" onSubmit={afterSubmission}>\n                    <input className=\"form-control mt-20\" type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n\n                    <label className=\"form-label mt-20\">Description</label>\n                    <textarea name='description' className=\"form-control\" rows=\"3\" onChange={onFormChange} />\n\n                    <label className=\"form-label mt-20\">Record Type</label>\n                    <select className=\"form-select\" name='recordType' onChange={onFormChange}>\n                        <option selected value=\"\" >Record Type</option>\n                        <option value=\"Personal ID\">Personal ID</option>\n                        <option value=\"Health Report\">Health Report</option>\n                        <option value=\"Vaccination Report\">Vaccination Report</option>\n                    </select>\n\n                    <label className=\"form-label mt-20\">Record Date (MM/DD/YYYY)</label>\n\n                    <input className=\"form-control\" name='recordDate' type=\"text\" onChange={onFormChange} />\n\n                    <button type=\"submit\" className=\"btn btn-primary mt-20\" onClick={createNewRecord}>Submit</button>\n                </form>\n\n            </div>\n\n            <div className=\"mt-40 col-md-12\">\n                <h2 className=\"hera-purple\">Saved Records</h2>\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Record Date</th>\n                            <th scope=\"col\">Record Type</th>\n                            <th scope=\"col\">Description</th>\n                            <th scope=\"col\">Uploaded File</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {ownedRecords.map(function (record, i) {\n                            return <RecordComponent {...record} record={record} key={i}></RecordComponent>\n                        })}\n                        { }\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"mt-40\"></div>\n        </div></>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}