{"ast":null,"code":"var _jsxFileName = \"/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { ethers } from 'ethers';\nimport Caver from 'caver-js';\nimport { KaikasWeb3Provider } from \"@klaytn/kaikas-web3-provider\";\nimport { create } from 'ipfs-http-client';\nimport React, { useState, useRef, useEffect, useContext } from 'react'; // new\n\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { AccountContext } from './context'; // import emr from './emr.js'\n\nimport { databaseAddress, ownerAddress } from './config';\nimport heralogo from './img/logo-hera.png';\nimport metamasklogo from './img/logo-metamask.png';\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json';\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json';\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport RecordComponent from './RecordComponent'; // const ROPSTEN_TESTNET_RPC_URL = 'https://ropsten.infura.io/'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'; // const rpcURL = ROPSTEN_TESTNET_RPC_URL\n\nconst rpcURL = BAOBAB_TESTNET_RPC_URL; // const web3 = new Web3(rpcURL)\n\nconst caver = new Caver(rpcURL); //IPFS endpoint\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\nconst databaseContract = new caver.klay.Contract(EMRContractDatabase.abi, databaseAddress); //Initial Empty State of Medical Record\n\nconst initialState = {\n  description: '',\n  recordType: '',\n  recordDate: ''\n};\nexport class Record {\n  constructor(id, type, date, image_hash, data_hash) {\n    this.id = id;\n    this.type = type;\n    this.date = date;\n    this.image_hash = image_hash;\n    this.data_hash = data_hash;\n  }\n\n}\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    Component,\n    pageProps\n  } = _ref;\n  const [account, setAccount] = useState(null);\n  const [file, setFile] = useState(null);\n  const [record, setRecord] = useState(initialState);\n  const {\n    description,\n    recordType,\n    recordDate\n  } = record;\n  const [ownedRecords, setOwnedRecords] = useState([]);\n  let rows = [];\n  const [provider, setProvider] = useState(null);\n  const fileRef = useRef(null);\n  const [loaded, setLoaded] = useState(false); // const { records } = pageProps\n\n  function onChange(e) {\n    setRecord(() => ({ ...record,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      /* delay rendering buttons until dynamic import is complete */\n      setLoaded(true);\n    }, 500);\n  }, []);\n\n  async function getWeb3Modal() {\n    const web3Modal = new Web3Modal({\n      cacheProvider: false,\n      network: \"boabab\",\n      networkId: 1001,\n      chain: \"Klaytn\",\n      chainId: 1001,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: \"your-infura-id\"\n          },\n          kaikas: {\n            package: KaikasWeb3Provider\n          }\n        }\n      }\n    });\n    console.log(web3Modal);\n    return web3Modal;\n  }\n  /* the connect function uses web3 modal to connect to the user's wallet */\n\n\n  async function connect() {\n    try {\n      const web3Modal = await getWeb3Modal();\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n      const accounts = await provider.listAccounts();\n      caver.wallet.add(caver.wallet.keyring.createFromPrivateKey(provider.getSigner()));\n      console.log(accounts);\n      setAccount(accounts[0]);\n      console.log(account);\n      console.log(provider);\n      setProvider(provider);\n      console.log(caver.klay.accounts);\n      getOwnedRecords();\n    } catch (err) {\n      console.log('error:', err);\n    }\n  }\n\n  async function saveImageToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(file);\n      return added.path;\n    } catch (err) {\n      console.log('Could not upload image: ', err);\n    }\n  }\n\n  async function saveDataToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(JSON.stringify(record.description));\n      return added.path;\n    } catch (err) {\n      console.log('Could not upload Data: ', err);\n    }\n  }\n\n  const convertToUnix = date => {\n    const dateFormat = new Date(date);\n    let unixTimestamp = Math.floor(dateFormat.getTime() / 1000); // console.log(unixTimestamp)\n\n    return unixTimestamp;\n  };\n\n  async function createNewRecord(e) {\n    /* saves post to ipfs then anchors to smart contract */\n    if (file == null) {\n      alert(\"Please upload a Medical Record Image to add to HeraChain\");\n      return;\n    }\n\n    if (!recordType) {\n      alert(\"Please select a valid Record Type.\");\n      return;\n    }\n\n    if (!recordDate) {\n      alert(\"Please provide a valid Record Date\");\n      return;\n    }\n\n    const unix = convertToUnix(recordDate);\n\n    if (isNaN(unix)) {\n      alert(\"Please provide a valid Record Date\");\n      return;\n    }\n\n    const image_hash = await saveImageToIpfs();\n    console.log(\"Image has been saved to \" + image_hash);\n    const data_hash = await saveDataToIpfs();\n    console.log(\"Data has been saved to \" + data_hash);\n    var success = await createEMR(image_hash, data_hash);\n\n    if (!success) {\n      alert(\"Unable to create an EMR on the blockchain. Please check that you have connected your wallet.\");\n      return;\n    }\n\n    alert(\"Medical Record Successfully Added to HeraChain\");\n    setRecord(() => ({\n      description: '',\n      recordType: '',\n      recordDate: ''\n    }));\n    document.getElementById(\"form\").reset();\n    setFile(null);\n  }\n\n  async function createEMR(image_hash, data_hash) {\n    if (typeof window.ethereum !== 'undefined') {\n      const signer = provider.getSigner();\n      console.log(signer);\n      console.log('contract: ', databaseAddress);\n      console.log('signer: ', account);\n\n      try {\n        const unixdate = convertToUnix(record.recordDate);\n        console.log(\"Record Date: \" + unixdate);\n        const val = await databaseContract.methods.createEMR(record.recordType, \"Active\", unixdate, image_hash, data_hash).send({\n          from: ownerAddress,\n          feePayer: ownerAddress,\n          feeDelegation: true,\n          gas: 300000000\n        });\n        console.log('val: ', val);\n        return true;\n      } catch (err) {\n        console.log('Error: ', err);\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  function onFormChange(e) {\n    setRecord(() => ({ ...record,\n      [e.target.name]: e.target.value\n    }));\n    console.log(record);\n  }\n\n  async function getOwnedRecords() {\n    console.log(\"Getting owned EMRs\");\n    console.log(\"Database: \" + databaseContract.options.address);\n    setOwnedRecords([]);\n    const web3Modal = await getWeb3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    console.log(provider); // const signer = new caver.account(provider.getSigner())\n\n    const signer = provider.getSigner(); // const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n\n    await databaseContract.methods.createEMRStorage().send({\n      from: ownerAddress,\n      // feePayer: ownerAddress,\n      // feeDelegation: true,\n      gas: 300000000\n    });\n    let emrStorageAddress = await databaseContract.methods.getEMRStorageContract().call();\n    console.log(\"Storage: \" + emrStorageAddress);\n    const storageContract = new caver.contract(EMRStorageContract.abi, emrStorageAddress);\n    let ownedRecs = await storageContract.methods.getEMRIDs();\n\n    for (let j = 0; j < ownedRecs.length; j++) {\n      var rec = ownedRecs[j];\n      let emr = {\n        id: j + 1,\n        type: rec.record_type,\n        date: rec.record_date,\n        image_hash: rec.ipfs_image_hash,\n        data_hash: rec.ipfs_data_hash\n      };\n      setOwnedRecords(ownedRecords => [...ownedRecords, emr]);\n    }\n\n    console.log(ownedRecords);\n  }\n\n  const afterSubmission = event => {\n    event.preventDefault(); // setRecord(() => ({ description: '', recordType: '', recordDate: '' }))\n    // document.getElementById(\"form\").reset();\n    // setFile(null)\n  };\n\n  useEffect(() => {\n    async function fetchEMRs() {\n      await getOwnedRecords();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo mt-40\",\n          src: heralogo,\n          alt: \"hera logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hera-purple\",\n          children: \"Hera Digital Documentation System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"mt-20 mr-20\",\n          src: metamasklogo,\n          alt: \"metamask logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"metamask-btn mt-20\",\n          onClick: connect,\n          children: \"Connect Metamask Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 85\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"address-display\",\n          children: [\"Account: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-20 col-md-6 col-sm-12 margin-zero\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"form-label hera-purple\",\n          children: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form\",\n          onSubmit: afterSubmission,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control mt-20\",\n            type: \"file\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            className: \"form-control\",\n            rows: \"3\",\n            onChange: onFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Record Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: \"recordType\",\n            onChange: onFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"Record Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Personal ID\",\n              children: \"Personal ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Health Report\",\n              children: \"Health Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Vaccination Report\",\n              children: \"Vaccination Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-20\",\n            children: \"Record Date (MM/DD/YYYY)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"recordDate\",\n            type: \"text\",\n            onChange: onFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mt-20\",\n            onClick: createNewRecord,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-40 col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hera-purple\",\n          children: \"Saved Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Record Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Record Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Uploaded File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ownedRecords.map(function (record, i) {\n              return /*#__PURE__*/_createElement(RecordComponent, { ...record,\n                record: record,\n                key: i,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 22\n                }\n              });\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mt-40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 219\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ute73IfzoDwH1YPGvdrWoINMic4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Accordion","Card","Button","ethers","Caver","KaikasWeb3Provider","create","React","useState","useRef","useEffect","useContext","Web3Modal","WalletConnectProvider","AccountContext","databaseAddress","ownerAddress","heralogo","metamasklogo","EMRContractDatabase","EMRStorageContract","Interface","SignerWithAddress","toHaveStyle","RecordComponent","BAOBAB_TESTNET_RPC_URL","rpcURL","caver","client","databaseContract","klay","Contract","abi","initialState","description","recordType","recordDate","Record","constructor","id","type","date","image_hash","data_hash","App","Component","pageProps","account","setAccount","file","setFile","record","setRecord","ownedRecords","setOwnedRecords","rows","provider","setProvider","fileRef","loaded","setLoaded","onChange","e","target","name","value","setTimeout","getWeb3Modal","web3Modal","cacheProvider","network","networkId","chain","chainId","providerOptions","walletconnect","package","options","infuraId","kaikas","console","log","connect","connection","providers","Web3Provider","accounts","listAccounts","wallet","add","keyring","createFromPrivateKey","getSigner","getOwnedRecords","err","saveImageToIpfs","added","path","saveDataToIpfs","JSON","stringify","convertToUnix","dateFormat","Date","unixTimestamp","Math","floor","getTime","createNewRecord","alert","unix","isNaN","success","createEMR","document","getElementById","reset","window","ethereum","signer","unixdate","val","methods","send","from","feePayer","feeDelegation","gas","onFormChange","address","createEMRStorage","emrStorageAddress","getEMRStorageContract","call","storageContract","contract","ownedRecs","getEMRIDs","j","length","rec","emr","record_type","record_date","ipfs_image_hash","ipfs_data_hash","afterSubmission","event","preventDefault","fetchEMRs","files","map","i"],"sources":["/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { ethers } from 'ethers'\nimport Caver from 'caver-js'\nimport { KaikasWeb3Provider } from \"@klaytn/kaikas-web3-provider\"\nimport { create } from 'ipfs-http-client'\nimport React, { useState, useRef, useEffect, useContext } from 'react' // new\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { AccountContext } from './context';\n// import emr from './emr.js'\nimport {\n  databaseAddress, ownerAddress\n} from './config'\n\nimport heralogo from './img/logo-hera.png'\nimport metamasklogo from './img/logo-metamask.png'\n\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json'\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json'\n\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport RecordComponent from './RecordComponent';\n\n// const ROPSTEN_TESTNET_RPC_URL = 'https://ropsten.infura.io/'\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'\n\n// const rpcURL = ROPSTEN_TESTNET_RPC_URL\nconst rpcURL = BAOBAB_TESTNET_RPC_URL\n\n// const web3 = new Web3(rpcURL)\nconst caver = new Caver(rpcURL)\n\n//IPFS endpoint\nconst client = create('https://ipfs.infura.io:5001/api/v0')\n\nconst databaseContract = new caver.klay.Contract(EMRContractDatabase.abi, databaseAddress)\n\n//Initial Empty State of Medical Record\nconst initialState = { description: '', recordType: '', recordDate: '' }\n\nexport class Record {\n  constructor(id, type, date, image_hash, data_hash) {\n    this.id = id;\n    this.type = type;\n    this.date = date;\n    this.image_hash = image_hash;\n    this.data_hash = data_hash;\n  }\n}\n\nfunction App({ Component, pageProps }) {\n  const [account, setAccount] = useState(null)\n  const [file, setFile] = useState(null)\n  const [record, setRecord] = useState(initialState)\n  const { description, recordType, recordDate } = record\n  const [ownedRecords, setOwnedRecords] = useState([])\n  let rows = []\n  const [provider, setProvider] = useState(null)\n\n  const fileRef = useRef(null)\n\n  const [loaded, setLoaded] = useState(false)\n\n  // const { records } = pageProps\n\n  function onChange(e) {\n    setRecord(() => ({ ...record, [e.target.name]: e.target.value }))\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      /* delay rendering buttons until dynamic import is complete */\n      setLoaded(true)\n    }, 500)\n  }, [])\n\n  async function getWeb3Modal() {\n    const web3Modal = new Web3Modal({\n      cacheProvider: false,\n      network: \"boabab\",\n      networkId: 1001,\n      chain: \"Klaytn\",\n      chainId: 1001,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: \"your-infura-id\"\n          },\n          kaikas: {\n            package: KaikasWeb3Provider,\n          }\n        },\n      },\n    })\n    console.log(web3Modal)\n    return web3Modal\n  }\n\n\n\n  /* the connect function uses web3 modal to connect to the user's wallet */\n  async function connect() {\n    try {\n      const web3Modal = await getWeb3Modal()\n      const connection = await web3Modal.connect()\n      const provider = new ethers.providers.Web3Provider(connection)\n      const accounts = await provider.listAccounts()\n      caver.wallet.add(caver.wallet.keyring.createFromPrivateKey(provider.getSigner()))\n      console.log(accounts)\n      setAccount(accounts[0])\n      console.log(account)\n      console.log(provider)\n      setProvider(provider)\n      console.log(caver.klay.accounts)\n      getOwnedRecords()\n    } catch (err) {\n      console.log('error:', err)\n    }\n  }\n\n\n\n  async function saveImageToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(file)\n      return added.path\n    } catch (err) {\n      console.log('Could not upload image: ', err)\n    }\n  }\n\n  async function saveDataToIpfs() {\n    /* save post metadata to ipfs */\n    try {\n      const added = await client.add(JSON.stringify(record.description))\n      return added.path\n    } catch (err) {\n      console.log('Could not upload Data: ', err)\n    }\n  }\n\n  const convertToUnix = (date) => {\n    const dateFormat = new Date(date);\n    let unixTimestamp = Math.floor(dateFormat.getTime() / 1000)\n    // console.log(unixTimestamp)\n    return unixTimestamp\n  }\n\n\n  async function createNewRecord(e) {\n    /* saves post to ipfs then anchors to smart contract */\n    if (file == null) {\n      alert(\"Please upload a Medical Record Image to add to HeraChain\")\n      return\n    }\n    if (!recordType) {\n      alert(\"Please select a valid Record Type.\")\n      return\n    }\n    if (!recordDate) {\n      alert(\"Please provide a valid Record Date\")\n      return\n    }\n    const unix = convertToUnix(recordDate)\n\n    if (isNaN(unix)) {\n      alert(\"Please provide a valid Record Date\")\n      return\n    }\n\n    const image_hash = await saveImageToIpfs()\n    console.log(\"Image has been saved to \" + image_hash)\n    const data_hash = await saveDataToIpfs()\n    console.log(\"Data has been saved to \" + data_hash)\n    var success = await createEMR(image_hash, data_hash)\n    if (!success) {\n      alert(\"Unable to create an EMR on the blockchain. Please check that you have connected your wallet.\")\n      return\n    }\n    alert(\"Medical Record Successfully Added to HeraChain\")\n    setRecord(() => ({ description: '', recordType: '', recordDate: '' }))\n    document.getElementById(\"form\").reset();\n    setFile(null)\n  }\n\n\n\n  async function createEMR(image_hash, data_hash) {\n    if (typeof window.ethereum !== 'undefined') {\n      const signer = provider.getSigner()\n      console.log(signer)\n      console.log('contract: ', databaseAddress)\n      console.log('signer: ', account)\n      try {\n        const unixdate = convertToUnix(record.recordDate)\n        console.log(\"Record Date: \" + unixdate)\n        const val = await databaseContract.methods.createEMR(record.recordType, \"Active\", unixdate, image_hash, data_hash).send({\n          from: ownerAddress,\n          feePayer: ownerAddress,\n          feeDelegation: true,\n          gas: 300000000,\n        })\n\n        console.log('val: ', val)\n        return true;\n      } catch (err) {\n        console.log('Error: ', err)\n        return false;\n      }\n    }\n    return false;\n\n  }\n\n  function onFormChange(e) {\n    setRecord(() => ({ ...record, [e.target.name]: e.target.value }))\n    console.log(record)\n  }\n\n  async function getOwnedRecords() {\n    console.log(\"Getting owned EMRs\")\n    console.log(\"Database: \" + databaseContract.options.address)\n    setOwnedRecords([])\n    const web3Modal = await getWeb3Modal()\n    const connection = await web3Modal.connect()\n    const provider = new ethers.providers.Web3Provider(connection)\n\n    console.log(provider)\n    // const signer = new caver.account(provider.getSigner())\n    const signer = provider.getSigner()\n    // const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n    await databaseContract.methods.createEMRStorage().send({\n      from: ownerAddress,\n      // feePayer: ownerAddress,\n      // feeDelegation: true,\n      gas: 300000000,\n    })\n\n    let emrStorageAddress = await databaseContract.methods.getEMRStorageContract().call()\n    console.log(\"Storage: \" + emrStorageAddress)\n\n    const storageContract = new caver.contract(EMRStorageContract.abi, emrStorageAddress);\n    let ownedRecs = await storageContract.methods.getEMRIDs()\n    for (let j = 0; j < ownedRecs.length; j++) {\n      var rec = ownedRecs[j];\n      let emr: Record = {\n        id: j + 1,\n        type: rec.record_type,\n        date: rec.record_date,\n        image_hash: rec.ipfs_image_hash,\n        data_hash: rec.ipfs_data_hash\n      }\n      setOwnedRecords(ownedRecords => [...ownedRecords, emr]);\n    }\n    console.log(ownedRecords)\n  }\n\n  const afterSubmission = (event) => {\n    event.preventDefault();\n    // setRecord(() => ({ description: '', recordType: '', recordDate: '' }))\n    // document.getElementById(\"form\").reset();\n    // setFile(null)\n  }\n\n  useEffect(() => {\n    async function fetchEMRs() {\n      await getOwnedRecords()\n    }\n  }, [])\n\n\n  return (\n    <><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\" /><div className=\"container\">\n      <center><img className=\"logo mt-40\" src={heralogo} alt=\"hera logo\" /><br />\n        <h2 className=\"hera-purple\">Hera Digital Documentation System</h2>\n      </center>\n\n      <center><img className=\"mt-20 mr-20\" src={metamasklogo} alt=\"metamask logo\" /><button className=\"metamask-btn mt-20\" onClick={connect}>Connect Metamask Wallet</button></center>\n      <center><h6 className=\"address-display\">Account: {account}</h6></center>\n\n      <div className=\"mt-20 col-md-6 col-sm-12 margin-zero\">\n\n        <h4 className=\"form-label hera-purple\">Upload a file</h4>\n\n        {/* <FileForm onSubmit={createEMR} /> */}\n        <form id=\"form\" onSubmit={afterSubmission}>\n          <input className=\"form-control mt-20\" type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n\n          <label className=\"form-label mt-20\">Description</label>\n          <textarea name='description' className=\"form-control\" rows=\"3\" onChange={onFormChange} />\n\n          <label className=\"form-label mt-20\">Record Type</label>\n          <select className=\"form-select\" name='recordType' onChange={onFormChange}>\n            <option selected value=\"\" >Record Type</option>\n            <option value=\"Personal ID\">Personal ID</option>\n            <option value=\"Health Report\">Health Report</option>\n            <option value=\"Vaccination Report\">Vaccination Report</option>\n          </select>\n\n          <label className=\"form-label mt-20\">Record Date (MM/DD/YYYY)</label>\n\n          <input className=\"form-control\" name='recordDate' type=\"text\" onChange={onFormChange} />\n\n          <button type=\"submit\" className=\"btn btn-primary mt-20\" onClick={createNewRecord}>Submit</button>\n        </form>\n\n      </div>\n\n      <div className=\"mt-40 col-md-12\">\n        <h2 className=\"hera-purple\">Saved Records</h2>\n\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Record Date</th>\n              <th scope=\"col\">Record Type</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Uploaded File</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ownedRecords.map(function (record, i) {\n              return <RecordComponent {...record} record={record} key={i}></RecordComponent>;\n            })}\n            {/* <tr>\n              <th scope=\"row\">1</th>\n              <td>22/12/2020</td>\n              <td>Health Report</td>\n              <td>Blood Test where my sugar levels were too high. Oh noooo... :(</td>\n              <td>\n                <div className=\"accordion\" id=\"accordionExample\">\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse1\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        View File\n                      </button>\n                    </h2>\n                    <div id=\"collapse1\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                      <div className=\"accordion-body\">\n                        <img src={require('./img/medicalreport.png')} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">2</th>\n              <td>2/01/2022</td>\n              <td>Personal ID</td>\n              <td>For my own safekeeping. My ID in my home country</td>\n              <td>\n                <div className=\"accordion\" id=\"accordionExample\">\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse2\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        View File\n                      </button>\n                    </h2>\n                    <div id=\"collapse2\" className=\"accordion-collapse collapse\" aria-labelledby=\"heading1\" data-bs-parent=\"#accordionExample\">\n                      <div className=\"accordion-body\">\n                        <img src={require('./img/medicalreport.png')} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">3</th>\n              <td>5/02/2022</td>\n              <td>Personal ID</td>\n              <td>My driver's licensein my home country</td>\n              <td>\n                <div className=\"accordion\" id=\"accordionExample\">\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse3\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        View File\n                      </button>\n                    </h2>\n                    <div id=\"collapse3\" className=\"accordion-collapse collapse\" aria-labelledby=\"heading3\" data-bs-parent=\"#accordionExample\">\n                      <div className=\"accordion-body\">\n                        <img src={require('./img/medicalreport.png')} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr> */}\n          </tbody>\n\n\n        </table>\n\n      </div>\n\n\n      <div class=\"mt-40\"></div>\n\n\n    </div></>\n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}