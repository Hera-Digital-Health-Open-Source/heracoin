{"ast":null,"code":"var _jsxFileName = \"/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/RecordComponent.js\",\n    _s = $RefreshSig$();\n\nimport { Record } from './App.js';\nimport { ethers } from 'ethers'; // import Web3 from 'web3'\n\nimport Caver from 'caver-js';\nimport { create, get } from 'ipfs-http-client';\nimport { useState, useRef, useEffect } from 'react'; // new\n// import { useRouter } from 'next/router'\n\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { AccountContext } from './context'; // import emr from './emr.js'\n\nimport { databaseAddress, ownerAddress } from './config';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json';\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json';\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport AccordionItem from 'react-bootstrap/esm/AccordionItem.js'; // const ROPSTEN_TESTNET_RPC_URL = 'https://ropsten.infura.io/'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'; // const rpcURL = ROPSTEN_TESTNET_RPC_URL\n\nconst rpcURL = BAOBAB_TESTNET_RPC_URL; // const web3 = new Web3(rpcURL)\n\nconst caver = new Caver(rpcURL);\nexport default function RecordComponent(props) {\n  _s();\n\n  const [recordDate, setRecordDate] = useState();\n  const [recordType, setRecordType] = useState();\n  const [recordDescription, setRecordDescription] = useState();\n  const [recordImage, setRecordImage] = useState();\n  const recordId = props.id;\n  const recordNum = props.num;\n  const ipfsURI = 'https://heradigitalhealth.infura-ipfs.io/ipfs';\n  useEffect(() => {\n    console.log(\"Converting Date\");\n    console.log(props.date);\n    console.log(props.type);\n    setRecordDate(convertToDate(props.date));\n    setRecordType(props.type);\n    getStaticProps();\n  }, []);\n\n  function convertToDate(string) {\n    const t = parseInt(string);\n    const milliseconds = t * 1000;\n    const dateObject = new Date(milliseconds);\n    const dateTimestamp = dateObject.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }); // console.log(dateTimestamp)\n\n    return dateTimestamp;\n  }\n\n  async function getStaticProps() {\n    const dataUrl = `${ipfsURI}/${props.data_hash}`;\n    const response = await fetch(dataUrl);\n    const data = await response.json();\n    setRecordDescription(data);\n    const imageUrl = `${ipfsURI}/${props.image_hash}`;\n    console.log(imageUrl);\n    setRecordImage(imageUrl);\n  }\n\n  async function removeRecord() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer);\n    let emrStorageAddress = await databaseContract.getEMRStorageContract();\n    const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n    let ownedRecs = await storageContract.voidEMR(recordId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      scope: \"row\",\n      name: \"num\",\n      children: recordNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      name: \"date\",\n      children: recordDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      name: \"type\",\n      children: [\" \", recordType, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      name: \"description\",\n      children: recordDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"View Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"recordImage\",\n                src: recordImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"removeRecord\",\n        onClick: removeRecord,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RecordComponent, \"HSqs7/nDXSRKDycVLpc54Dit+y8=\");\n\n_c = RecordComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordComponent\");","map":{"version":3,"names":["Record","ethers","Caver","create","get","useState","useRef","useEffect","Web3Modal","WalletConnectProvider","AccountContext","databaseAddress","ownerAddress","Accordion","Card","Button","EMRContractDatabase","EMRStorageContract","Interface","SignerWithAddress","AccordionItem","BAOBAB_TESTNET_RPC_URL","rpcURL","caver","RecordComponent","props","recordDate","setRecordDate","recordType","setRecordType","recordDescription","setRecordDescription","recordImage","setRecordImage","recordId","id","recordNum","num","ipfsURI","console","log","date","type","convertToDate","getStaticProps","string","t","parseInt","milliseconds","dateObject","Date","dateTimestamp","toLocaleDateString","year","month","day","dataUrl","data_hash","response","fetch","data","json","imageUrl","image_hash","removeRecord","provider","providers","Web3Provider","window","ethereum","signer","getSigner","databaseContract","Contract","abi","emrStorageAddress","getEMRStorageContract","storageContract","ownedRecs","voidEMR"],"sources":["/Users/austinhatch/Documents/GitHub/Heracoin/herachain-demo/src/RecordComponent.js"],"sourcesContent":["import { Record } from './App.js';\nimport { ethers } from 'ethers'\n// import Web3 from 'web3'\nimport Caver from 'caver-js'\n\nimport { create, get } from 'ipfs-http-client'\nimport { useState, useRef, useEffect } from 'react' // new\n// import { useRouter } from 'next/router'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { AccountContext } from './context';\n// import emr from './emr.js'\nimport {\n    databaseAddress, ownerAddress\n} from './config'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport EMRContractDatabase from './artifacts/contracts/EMRContractDatabase.sol/EMRContractDatabase.json'\nimport EMRStorageContract from './artifacts/contracts/EMRStorageContract.sol/EMRStorageContract.json'\n\nimport { Interface } from 'ethers/lib/utils';\nimport { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';\nimport AccordionItem from 'react-bootstrap/esm/AccordionItem.js';\n\n\n\n// const ROPSTEN_TESTNET_RPC_URL = 'https://ropsten.infura.io/'\nconst BAOBAB_TESTNET_RPC_URL = 'https://api.baobab.klaytn.net:8651/'\n\n// const rpcURL = ROPSTEN_TESTNET_RPC_URL\nconst rpcURL = BAOBAB_TESTNET_RPC_URL\n\n// const web3 = new Web3(rpcURL)\nconst caver = new Caver(rpcURL)\n\nexport default function RecordComponent(props) {\n    const [recordDate, setRecordDate] = useState()\n    const [recordType, setRecordType] = useState()\n    const [recordDescription, setRecordDescription] = useState()\n    const [recordImage, setRecordImage] = useState()\n    const recordId = props.id\n    const recordNum = props.num\n    const ipfsURI = 'https://heradigitalhealth.infura-ipfs.io/ipfs'\n\n\n\n    useEffect(() => {\n        console.log(\"Converting Date\")\n        console.log(props.date)\n        console.log(props.type)\n        setRecordDate(convertToDate(props.date))\n        setRecordType(props.type)\n        getStaticProps()\n    }, [])\n\n\n    function convertToDate(string) {\n        const t = parseInt(string)\n        const milliseconds = t * 1000\n        const dateObject = new Date(milliseconds)\n        const dateTimestamp = dateObject.toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        })\n        // console.log(dateTimestamp)\n        return dateTimestamp\n    }\n\n    async function getStaticProps() {\n        const dataUrl = `${ipfsURI}/${props.data_hash}`\n        const response = await fetch(dataUrl)\n        const data = await response.json()\n        setRecordDescription(data)\n\n        const imageUrl = `${ipfsURI}/${props.image_hash}`\n        console.log(imageUrl)\n        setRecordImage(imageUrl)\n    }\n\n    async function removeRecord() {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const signer = provider.getSigner()\n        const databaseContract = new ethers.Contract(databaseAddress, EMRContractDatabase.abi, signer)\n        let emrStorageAddress = await databaseContract.getEMRStorageContract()\n        const storageContract = new ethers.Contract(emrStorageAddress, EMRStorageContract.abi, signer);\n        let ownedRecs = await storageContract.voidEMR(recordId)\n    }\n\n    return (\n        <tr>\n            <th scope=\"row\" name=\"num\">{recordNum}</th>\n            <td name=\"date\">{recordDate}</td>\n            <td name=\"type\"> {recordType} </td>\n            <td name=\"description\">{recordDescription}</td>\n            <td>\n                <div>\n                    <Accordion defaultActiveKey=\"0\">\n                        <Accordion.Item eventKey=\"0\">\n                            <Accordion.Header>View Record</Accordion.Header>\n                            <Accordion.Body>\n                                <img className=\"recordImage\" src={recordImage} />\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n                </div>\n            </td >\n            <td>\n                <Button className=\"removeRecord\" onClick={removeRecord}>X</Button>\n            </td>\n        </tr >\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}